- name: Ensure pip is installed
  become: yes
  apt:
    name: python3-pip
    state: present
- name: Ensure openshift python package exists
  pip:
    name:
      - openshift
- name: Ensure Calico Helm Repository exists
  kubernetes.core.helm_repository:
    name: "projectcalico"
    repo_url: "https://projectcalico.docs.tigera.io/charts"
#- name: Ensure CertManager Helm Repository exists
#  kubernetes.core.helm_repository:
#    name: "jetstack"
#    repo_url: "https://charts.jetstack.io"
- name: Ensure Bitnami Helm Repository exists
  kubernetes.core.helm_repository:
    name: "bitnami"
    repo_url: "https://charts.bitnami.com/bitnami"
- name: Ensure Tigera Operator is installed
  kubernetes.core.helm:
    name: tigera-operator
    namespace: tigera-operator
    create_namespace: true
    chart_ref: projectcalico/tigera-operator
    chart_version: v3.24.5
- name: Ensure Calico Installation is present
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('ansible.builtin.file', 'templates/calico-installation.yaml') | from_yaml }}"
  register: calico_installation
- name: Ensure coredns is restarted
  shell: "kubectl rollout restart --namespace kube-system deployment/coredns"
  when: calico_installation.changed
- name: Ensure metallb is installed
  kubernetes.core.helm:
    name: metallb
    namespace: metallb-system
    create_namespace: true
    chart_ref: bitnami/metallb
    chart_version: 4.1.13
- name: Ensure metallb ipaddresspool is installed
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('ansible.builtin.file', 'templates/metallb-ipaddresspool.yaml') | from_yaml }}"
- name: Ensure metallb l2advertisement is installed
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('ansible.builtin.file', 'templates/metallb-l2advertisement.yaml') | from_yaml }}"
#- name: Ensure cert-manager is installed
#  kubernetes.core.helm:
#    name: cert-manager
#    namespace: cert-manager
#    create_namespace: true
#    chart_ref: jetstack/cert-manager
#    chart_version: v1.10.1
#    values:
#      installCRDs: true
